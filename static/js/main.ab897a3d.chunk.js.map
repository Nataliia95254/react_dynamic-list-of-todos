{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","selectedTodo","setModal","setSelectedTodo","className","map","todo","id","completed","title","type","onMouseDown","role","tabIndex","TodoFilter","setFilter","filter","setQuery","query","value","onChange","event","target","placeholder","style","pointerEvents","onClick","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","setModalLoading","modalLoading","useState","selectedUser","setSelectedUser","useEffect","userId","user","finally","href","email","name","App","setTodos","loading","setLoading","modal","todosFromServer","preparedTodos","useMemo","todosList","selectedFilter","selectedQuery","filteredTodos","toLocaleLowerCase","includes","filterTodos","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ab897a3d.chunk.js","sourcesContent":["import React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  selectedTodo: Todo | null;\n  setModal: (a: boolean) => void;\n  setSelectedTodo: (a: Todo) => void;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodo,\n  setModal,\n  setSelectedTodo,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map((todo) => {\n        return (\n          <tr data-cy=\"todo\" className=\"\" key={todo.id}>\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p\n                className={\n                  todo.completed\n                    ? 'has-text-success'\n                    : 'has-text-danger'\n                }\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n                <span className=\"icon\">\n                  <i\n                    className={`far ${selectedTodo?.id === todo.id ? 'fa-eye-slash' : 'fa-eye'}`}\n                    onMouseDown={() => {\n                      setModal(true);\n                      setSelectedTodo(todo);\n                    }}\n                    role=\"button\"\n                    tabIndex={0}\n                    aria-label={`View ${todo.title}`}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        );\n      })}\n    </tbody>\n  </table>\n);\n","type Props = {\n  setFilter: (a:string) => void;\n  filter: string;\n  query: string;\n  setQuery: (a:string) => void;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  setFilter,\n  filter,\n  setQuery,\n  query,\n}) => {\n  const handleFilterChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setFilter(event.target.value);\n  };\n\n  const handleQueryChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n  };\n\n  const handleDeleteButton = () => {\n    setQuery('');\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={filter}\n            onChange={handleFilterChange}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          onChange={handleQueryChange}\n          value={query}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n\n          {query && (\n            // eslint-disable-next-line jsx-a11y/control-has-associated-label\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={handleDeleteButton}\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\n\ntype Props = {\n  selectedTodo: Todo | null;\n  setModal: (a: boolean) => void;\n  setModalLoading: (a: boolean) => void;\n  setSelectedTodo: (a: Todo | null) => void;\n  modalLoading: boolean;\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  selectedTodo,\n  setSelectedTodo,\n  setModal,\n  setModalLoading,\n  modalLoading,\n}) => {\n  const [selectedUser, setSelectedUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    setModalLoading(true);\n    if (selectedTodo) {\n      getUser(selectedTodo.userId)\n        .then(user => {\n          setSelectedUser(user);\n        })\n        .finally(() => setModalLoading(false));\n    }\n  }, [selectedTodo, setModalLoading]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {modalLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedTodo?.id}`}\n\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => {\n                setModal(false);\n                setSelectedTodo(null);\n              }}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {/* <strong className=\"has-text-success\">Done</strong> */}\n              <strong className={\n                selectedTodo?.completed\n                  ? 'has-text-success'\n                  : 'has-text-danger'\n              }\n              >\n                {selectedTodo?.completed\n                  ? 'Done'\n                  : 'Planned'}\n              </strong>\n\n              {' by '}\n\n              <a href={`mailto:${selectedUser?.email}`}>\n                {selectedUser?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useMemo, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\n\nfunction filterTodos(todosList: Todo[], selectedFilter: string, selectedQuery: string) {\n  let filteredTodos: Todo[] = [...todosList];\n\n  switch (selectedFilter) {\n    case 'active':\n      filteredTodos = filteredTodos.filter(todo => !todo.completed);\n      break;\n    case 'completed':\n      filteredTodos = filteredTodos.filter(todo => todo.completed);\n      break;\n    default:\n  }\n\n  if (selectedQuery) {\n    filteredTodos = filteredTodos.filter(todo => todo.title.toLocaleLowerCase().includes(selectedQuery.toLocaleLowerCase()));\n  }\n\n  return filteredTodos;\n}\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [filter, setFilter] = useState('All');\n  const [query, setQuery] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [modalLoading, setModalLoading] = useState(false);\n  const [modal, setModal] = useState(false);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n\n  useEffect(() => {\n    setLoading(true);\n    getTodos()\n      .then(todosFromServer => {\n        setTodos(todosFromServer);\n      })\n      .finally(() => setLoading(false));\n  }, []);\n\n  const preparedTodos = useMemo(() => {\n    return filterTodos(todos, filter, query);\n  }, [todos, filter, query]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                setFilter={setFilter}\n                filter={filter}\n                query={query}\n                setQuery={setQuery}\n              />\n            </div>\n\n            <div className=\"block\">\n              {loading && <Loader />}\n              {!loading && todos.length > 0 && (\n                <TodoList\n                  todos={preparedTodos}\n                  selectedTodo={selectedTodo}\n                  setModal={setModal}\n                  setSelectedTodo={setSelectedTodo}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {modal && (\n        <TodoModal\n          selectedTodo={selectedTodo}\n          setSelectedTodo={setSelectedTodo}\n          setModal={setModal}\n          setModalLoading={setModalLoading}\n          modalLoading={modalLoading}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}